# Cosmos DB Environment Configuration
# Copy this file to .env and update with your actual values

# ===========================================
# COSMOS DB CONFIGURATION
# ===========================================

# Cosmos DB Connection String
# Get this by running: ./scripts/cosmosdb/manage.sh connection-string <environment>
# Or from Azure Portal: Cosmos DB Account > Settings > Keys > Primary Connection String
COSMOS_DB_CONNECTION_STRING="AccountEndpoint=https://your-cosmos-account.documents.azure.com:443/;AccountKey=your-account-key;Database=unconference;"

# Database name (should match what you configured in the setup scripts)
COSMOS_DB_DATABASE_NAME="unconference"

# Collection names (these match the collections created by the setup scripts)
COSMOS_DB_USERS_CONTAINER="users"
COSMOS_DB_EVENTS_CONTAINER="events"
COSMOS_DB_TOPICS_CONTAINER="topics"
COSMOS_DB_PARTICIPANTS_CONTAINER="participants"
COSMOS_DB_ORGANIZERS_CONTAINER="organizers"
COSMOS_DB_ASSIGNMENTS_CONTAINER="participant-assignments"

# ===========================================
# ENVIRONMENT SPECIFIC SETTINGS
# ===========================================

# Environment identifier (staging, production, development)
COSMOS_DB_ENVIRONMENT="staging"

# Enable/disable Cosmos DB features
COSMOS_DB_ENABLE_DIAGNOSTICS="true"
COSMOS_DB_ENABLE_RETRY="true"
COSMOS_DB_MAX_RETRY_ATTEMPTS="3"

# Connection settings
COSMOS_DB_REQUEST_TIMEOUT="30000"
COSMOS_DB_CONNECTION_TIMEOUT="10000"

# ===========================================
# EXISTING APPLICATION CONFIG
# ===========================================

# Your existing environment variables
GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""
NUXT_AUTH_GITHUB="false"
APP_ENV="development"

# ===========================================
# NOTES
# ===========================================
# 
# 1. Never commit the actual .env file with real credentials to version control
# 2. For production, store these as secure environment variables in your deployment platform
# 3. For local development, copy this file to .env.local and update the values
# 4. The Cosmos DB connection string contains sensitive account keys - keep it secure
# 5. Consider using Azure Key Vault for production secrets management
#