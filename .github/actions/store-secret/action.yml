name: 'Store File as GitHub Secret'
description: 'Stores a file content as a GitHub Actions secret with optional encryption'
inputs:
  file-path:
    description: 'Path to the file to store as secret'
    required: true
  secret-name:
    description: 'Name of the GitHub Actions secret'
    required: true
  github-token:
    description: 'GitHub token with repository permissions'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Store file as Actions secret (with encryption)
      if: inputs.use-encryption == 'true'
      uses: actions/github-script@v8
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          require('child_process').execSync('npm install libsodium-wrappers', {stdio: 'inherit'});
          const sodium = require('libsodium-wrappers');
          await sodium.ready;
          
          const secretName = '${{ inputs.secret-name }}';
          const secretValue = require('fs').readFileSync('${{ inputs.file-path }}', 'utf8');
          
          // Fetch the public key for the repository
          const { data: publicKey } = await github.rest.actions.getRepoPublicKey({
            owner: context.repo.owner,
            repo: context.repo.repo
          });

          // Encrypt the secret value using sodium
          const encryptedValue = sodium.crypto_box_seal(
            secretValue,
            Buffer.from(publicKey.key, 'base64')
          );
          
          await github.rest.actions.createOrUpdateRepoSecret({
            owner: context.repo.owner,
            repo: context.repo.repo,
            secret_name: secretName,
            encrypted_value: Buffer.from(encryptedValue).toString('base64'),
            key_id: publicKey.key_id,
            visibility: 'private'
          });