name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  NODE_VERSION: 20.x
  NUXT_SESSION_PASSWORD: ${{ secrets.NUXT_SESSION_PASSWORD }}
  NUXT_AUTH_GITHUB: ${{ vars.NUXT_AUTH_GITHUB }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_STATIC_WEBAPP_NAME: ${{ vars.AZURE_STATIC_WEBAPP_NAME }}
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  GITHUBAPP_CLIENT_ID: ${{ secrets.GITHUBAPP_CLIENT_ID }}
  GITHUBAPP_CLIENT_SECRET: ${{ secrets.GITHUBAPP_CLIENT_SECRET }}

permissions:
  id-token: write
  contents: read

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    environment:
      name: production
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - name: Get The Static Web App Deployment Token
        id: get_token
        run: |
          apiToken=$(az staticwebapp secrets list --name $AZURE_STATIC_WEBAPP_NAME --resource-group $AZURE_RESOURCE_GROUP --query "properties.apiKey" -o tsv)
          echo "::add-mask::$apiToken"
          echo "token=$apiToken" >> "$GITHUB_OUTPUT"
      - name: Set Environment Variables
        env:
          NUXT_AUTH_GITHUB: ${{ env.NUXT_AUTH_GITHUB }}
          NUXT_SESSION_PASSWORD: ${{ env.NUXT_SESSION_PASSWORD }}
          GITHUBAPP_CLIENT_ID: ${{ env.GITHUBAPP_CLIENT_ID }}
          GITHUBAPP_CLIENT_SECRET: ${{ env.GITHUBAPP_CLIENT_SECRET }}
          RESOURCE_GROUP: ${{ env.AZURE_RESOURCE_GROUP }}
          STATIC_WEB_APP_NAME: ${{ env.AZURE_STATIC_WEBAPP_NAME }}
        run: |
          az staticwebapp appsettings set \
            --name "$STATIC_WEB_APP_NAME" \
            --environment-name  "default" \
            --resource-group "$RESOURCE_GROUP" \
            --setting-names NUXT_SESSION_PASSWORD=$NUXT_SESSION_PASSWORD \
                            NUXT_AUTH_GITHUB=$NUXT_AUTH_GITHUB \
                            GITHUBAPP_CLIENT_ID=$GITHUBAPP_CLIENT_ID GITHUBAPP_CLIENT_SECRET=$GITHUBAPP_CLIENT_SECRET
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get_token.outputs.token }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: ".output/server" # Api source code path - optional
          output_location: ".output/public" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WHITE_COAST_06F6C0B03 }}
          action: "close"
