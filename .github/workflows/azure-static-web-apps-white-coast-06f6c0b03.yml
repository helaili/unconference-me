name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  NODE_VERSION: 20.x
  NUXT_SESSION_PASSWORD: ${{ secrets.NUXT_SESSION_PASSWORD }}
  NUXT_AUTH_GITHUB: ${{ vars.NUXT_AUTH_GITHUB }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_STATIC_WEBAPP_NAME: ${{ vars.AZURE_STATIC_WEBAPP_NAME }}
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  GITHUBAPP_CLIENT_ID: ${{ secrets.GITHUBAPP_CLIENT_ID }}
  GITHUBAPP_CLIENT_SECRET: ${{ secrets.GITHUBAPP_CLIENT_SECRET }}
  COSMODB_PRIMARY_CONNECTION_STRING: ${{ secrets.COSMODB_PRIMARY_CONNECTION_STRING }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build_and_deploy_job_to_production:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Build and Deploy Job to Production
    environment:
      name: production
      url: ${{ steps.deploy.outputs.app-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Deploy to Azure Static Web App
        id: deploy
        uses: ./.github/actions/deploy-static-web-app
        with:
          node-version: ${{ env.NODE_VERSION }}
          azure-client-id: ${{ env.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ env.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          static-web-app-name: ${{ env.AZURE_STATIC_WEBAPP_NAME }}
          nuxt-session-password: ${{ env.NUXT_SESSION_PASSWORD }}
          nuxt-auth-github: ${{ env.NUXT_AUTH_GITHUB }}
          github-client-id: ${{ env.GITHUBAPP_CLIENT_ID }}
          github-client-secret: ${{ env.GITHUBAPP_CLIENT_SECRET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          app-location: "/"
          api-location: ".output/server"
          output-location: ".output/public"
          production-branch: "main"
          cosmos-db-connection-string: ${{ env.COSMODB_PRIMARY_CONNECTION_STRING }}
          app-env: "production"
          
  build_and_deploy_job_to_pr_environment:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Build and Deploy Job to PR Environment
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.app-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Deploy to Azure Static Web App
        id: deploy
        uses: ./.github/actions/deploy-static-web-app
        with:
          node-version: ${{ env.NODE_VERSION }}
          azure-client-id: ${{ env.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ env.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          static-web-app-name: ${{ env.AZURE_STATIC_WEBAPP_NAME }}
          nuxt-session-password: ${{ env.NUXT_SESSION_PASSWORD }}
          nuxt-auth-github: ${{ env.NUXT_AUTH_GITHUB }}
          github-client-id: ${{ env.GITHUBAPP_CLIENT_ID }}
          github-client-secret: ${{ env.GITHUBAPP_CLIENT_SECRET }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          app-location: "/"
          api-location: ".output/server"
          output-location: ".output/public"
          production-branch: "main"
          cosmos-db-connection-string: ${{ env.COSMODB_PRIMARY_CONNECTION_STRING }}
          app-env: "staging"
          
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    environment: staging
    name: Close Pull Request Job
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - name: Get The Static Web App Deployment Token
        id: get_token
        env:
          RESOURCE_GROUP: ${{ env.AZURE_RESOURCE_GROUP }}
          STATIC_WEB_APP_NAME: ${{ env.AZURE_STATIC_WEBAPP_NAME }}
        run: |
          apiToken=$(az staticwebapp secrets list --name $AZURE_STATIC_WEBAPP_NAME --resource-group $AZURE_RESOURCE_GROUP --query "properties.apiKey" -o tsv)
          echo "::add-mask::${apiToken}"
          echo "token=${apiToken}" >> "$GITHUB_OUTPUT"
      - name: Close Pull Request
        id: closepullrequest
        uses: azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get_token.outputs.token }}
          action: "close"
